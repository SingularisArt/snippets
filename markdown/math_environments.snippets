global !p

from markdown_.scopes import math, display_math, inline_math, chem, not_chem, unit, not_unit

def inline_environment(snip, env = '', option = ''):
	before_text = snip.buffer[snip.line][:snip.snippet_start[1]]
	after_text = snip.buffer[snip.line][snip.snippet_end[1]:]
	snip.buffer[snip.line] = ''
	anon_snippet = before_text + '\\begin{' + (env or '${1:environment}') + '}' + ('{${2:' + option + '}}' if option else '') + ' ${3:${VISUAL}} \\end{' + (env or '$1') + '}$0' + after_text
	snip.expand_anon(anon_snippet)

def display_environment(snip, env = '', option = ''):
	before_text = snip.buffer[snip.line][:snip.snippet_start[1]]
	after_text = snip.buffer[snip.line][snip.snippet_end[1]:]
	snip.buffer[snip.line] = ''
	anon_snippet = before_text + '\\begin{' + (env or '${1:environment}') + '}' + ('{${2:' + option + '}}' if option else '') + '\n    ${3:${VISUAL}}\n\\end{' + (env or '$1') + '}\n$0' + after_text
	snip.expand_anon(anon_snippet)

endglobal

################################################################
#                                                              #
#                         Environments                         #
#                                                              #
################################################################

context "inline_math()"
post_jump "inline_environment(snip)"
snippet env "Environment" w
endsnippet

context "display_math()"
post_jump "display_environment(snip)"
snippet env "Environment" w
endsnippet

context "inline_math()"
post_jump "inline_environment(snip, option = 'option')"
snippet envo "Environment(option)" w
endsnippet

context "display_math()"
post_jump "display_environment(snip, option = 'option')"
snippet envo "Environment(option)" w
endsnippet

context "inline_math()"
post_jump "inline_environment(snip, 'cases')"
snippet case "Cases Environment" w
endsnippet

context "display_math()"
post_jump "display_environment(snip, 'cases')"
snippet case "Cases Environment" w
endsnippet

context "inline_math()"
post_jump "inline_environment(snip, 'aligned')"
snippet align "Aligned Environment" w
endsnippet

context "display_math()"
post_jump "display_environment(snip, 'aligned')"
snippet align "Aligned Environment" w
endsnippet

context "math()"
snippet btext "Text Environment" w
\text{$1}$0
endsnippet

context "math() and not_chem()"
snippet bce "Chemistry Environment" w
\ce{$1}$0
endsnippet

context "math() and not_unit()"
snippet bpu "Unit Environment" w
\pu{$1}$0
endsnippet

context "math()"
snippet btag "Tag" w
\tag{$1}$0
endsnippet

context "display_math()"
snippet mat "Matrix"
\begin{bmatrix}
$0
\end{bmatrix}
endsnippet

context "display_math()"
snippet det "Determinant matrix"
\begin{vmatrix}
$0
\end{vmatrix}
endsnippet

context "display_math()"
snippet vec "Vector"
\begin{pmatrix}
$0
\end{pmatrix}
endsnippet

context "display_math()"
snippet matil "Inline matrix"
\left[ \begin{smallmatrix}
$0
\end{smallmatrix} \right]
endsnippet

context "display_math()"
snippet detil "Inline determinant"
\left| \begin{smallmatrix}
$0
\end{smallmatrix} \right|
endsnippet

context "display_math()"
snippet vecil "Inline vector"
\left( \begin{smallmatrix}
$0
\end{smallmatrix} \right)
endsnippet

context "inline_math()"
snippet mat "Matrix"
\begin{bmatrix} $0 \end{bmatrix}
endsnippet

context "inline_math()"
snippet det "Determinant matrix"
\begin{vmatrix} $0 \end{vmatrix}
endsnippet

context "inline_math()"
snippet vec "Vector"
\begin{pmatrix} $0 \end{pmatrix}
endsnippet

context "inline_math()"
snippet matil "Inline matrix"
\left[ \begin{smallmatrix} $0 \end{smallmatrix} \right]
endsnippet

context "inline_math()"
snippet detil "Inline determinant"
\left| \begin{smallmatrix} $0 \end{smallmatrix} \right|
endsnippet

context "inline_math()"
snippet vecil "Inline vector"
\left( \begin{smallmatrix} $0 \end{smallmatrix} \right)
endsnippet

context "math()"
snippet chse "n choose p"
{${1:n} \choose ${2:p}} $0
endsnippet
