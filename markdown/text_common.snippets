global !p

from markdown_.scopes import text
from markdown_.text import *

endglobal

################################################################
#                                                              #
#                            Common                            #
#                                                              #
################################################################

# ilm -> $ $
context "text()"
snippet ilm "Inline Formula" Ab
$ $1 $
endsnippet

# dm -> $$ $$
context "text()"
snippet dm "Display Formula" Ab
$$
$1
$$
endsnippet

# tb53 -> a table with 3 three columns and 5 rows
context "text()"
pre_expand "create_table(snip)"
snippet "\btb([1-9]{2})" "Table" br
endsnippet

# tbl53 -> a table with 3 three columns and 5 rows
context "text()"
pre_expand "create_table(snip, 1)"
snippet "\btbl([1-9]{2})" "Left Table" br
endsnippet

# tbr53 -> a table with 3 three columns and 5 rows
context "text()"
pre_expand "create_table(snip, 2)"
snippet "\btbr([1-9]{2})" "Right Table" br
endsnippet

# tbm53 -> a table with 3 three columns and 5 rows
context "text()"
pre_expand "create_table(snip, 3)"
snippet "\btbm([1-9]{2})" "Center Table" br
endsnippet

# link -> [](https://)
context "text()"
snippet link "Link" w
[${1:${VISUAL}}](${2:https://${3:}})$0
endsnippet

# img -> ![](images/)
context "text()"
snippet img "Image" w
![](${2:images/${3:${VISUAL}}})$0
endsnippet

# code -> ``` ```
context "text()"
snippet code "Code Block" b
\`\`\`$1
${2:${VISUAL}}
\`\`\`
endsnippet

# fnt -> [^]
context "text()"
snippet fnt "FootNote" w
[^${1:${VISUAL}}]$0
endsnippet

# detail -> <details>
#						<summary></summary>
#
#						</details>
context "text()"
snippet detail "Disclosure" w
<details>
${1:<summary>${2}</summary>}
$3
</details>
endsnippet

# it -> **
context "text()"
snippet it "Italics" i
*${1:${VISUAL}}*$0
endsnippet

# bf -> ****
context "text()"
snippet bf "Bold" i
**${1:${VISUAL}}**$0
endsnippet

# bt -> ******
context "text()"
snippet bt "Bold Italics" i
***${1:${VISUAL}}***$0
endsnippet

# /. -> <!--  -->
context "text()"
snippet /. "Comment" i
<!-- ${1:${VISUAL}} -->$0
endsnippet

# #1 -> #
# #2 -> ##
# #3 -> ###
# #4 -> ####
# #5 -> #####
# #6 -> ######
context "text()"
snippet "^#([3-6])" "Paragraph" Ar
`!p snip.rv = '#' * int(match.group(1))` 
endsnippet

# hr -> <hr class="section">
context "text()"
snippet hr "Section Line" w


<hr class="section">


endsnippet
