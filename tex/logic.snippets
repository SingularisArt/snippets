global !p

from builtin import choose_next
from latex_.scopes import math

logical_terms = {'be': 'because', 'tf': 'therefore', 'and': 'land', 'or': 'lor', 'neg': 'neg'}
logical_terms_cycle = ['because', 'therefore', 'land', 'lor', 'neg']
exists_terms_cycle = ['exists', 'nexists']

ands = ['land', 'bigwedge']
ors = ['lor', 'bigvee']

endglobal


################################################################################
#                                                                              #
#                                    Logic                                     #
#                                                                              #
################################################################################

# be  -> \because
# tf  -> \therefore
# and -> \land
# or  -> \lor
# neg -> \neg
context "math()"
snippet "(?<!\\)\b(be|tf|and|or|neg)" "Logical Terms" Ar
\\`!p
snip.rv = logical_terms[match.group(1)]
`
endsnippet

# \because     -> \therefore
# \therefore   -> \land
# \land        -> \lor
# \lor         -> \neg
# \neg         -> \because
context "math()"
snippet "\\(because|therefore|land|lor|neg)" "Logical Terms Transformation" r
\\`!p
snip.rv = choose_next(match.group(1), logical_terms_cycle, 5)
`
endsnippet

# exist -> \exists
# EE    -> \exists
context "math()"
snippet "(?<!\\)\b(exist|EE)" "Exist" Ar
\exists
endsnippet

# for     -> \forall,
# AA      -> \forall,
context "math()"
snippet "(?<!\\)\b(for|AA)" "Forall" Ar
\forall
endsnippet

# \exists  -> \nexists
# \nexists -> \exists
context "math()"
snippet "\\(exists|nexists)" "Exists Transformation" r
\\`!p
snip.rv = choose_next(match.group(1), exists_terms_cycle, 2)
`
endsnippet

# |-> -> \mapsto
context "math()"
snippet |-> "Map" Ai
\mapsto
endsnippet

# vim:ft=snippets:
